# -*- coding: utf-8 -*-
"""Lab3_numpyTask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pek-cjtheoTZnjWsAlwmMXe3APK8WIHC

Problem 1: Convert the following 1-D array with 12 elements into a 2-D array. The outermost dimension will have 2 arrays, each with 6 elements:
"""

import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
#code here
arr2 = arr.reshape(2, 6) #used reshape function
print(arr2)

"""Problem 2: Convert the following 1-D array into a 3d Array with 1 X 3 elements"""

import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
#code here
arr3 = arr.reshape(-1, 1, 3)
print(arr3)

"""Problem 3: Iterate on the elements of the following 3-D array and add 12 if the number is odd and substract -12 if the number is even and print it.

"""

import numpy as np
arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])
#code here
for i in range(arr.shape[0]):
    for j in range(arr.shape[1]):
        for k in range(arr.shape[2]):
            if arr[i, j, k] % 2 == 0:
                arr[i, j, k] -= 12
            else:
                arr[i, j, k] += 12
print(arr)

"""Problem 4 : Join two 2-D arrays along rows (axis=1):"""

import numpy as np

arr1 = np.array([[1, 2], [3, 4],[5,6],[7,8],[9,10]])

arr2 = np.array([[5, 6], [7, 8],[70,80],[90,100],[110,120]])

#code here
join_arr = np.concatenate((arr1, arr2), axis=1) #concatenate function for join
print(join_arr)

"""Problem 5 : Stack two 2-D Array along columns"""

import numpy as np

arr1 = np.array([[1, 2], [3, 4],[5,6],[7,8],[9,10]])

arr2 = np.array([[5, 6], [7, 8],[70,80],[90,100],[110,120]])
#code here
arr3 = np.hstack((arr1, arr2)) #hstack function for stack
print(arr3)

"""Problem 5 : Stack two 2-D Array along depth"""

import numpy as np

arr1 = np.array([[1, 2], [3, 4],[5,6],[7,8],[9,10]])

arr2 = np.array([[5, 6], [7, 8],[70,80],[90,100],[110,120]])
#code here
arr3 = np.dstack((arr1, arr2)) #dstack function for stack the two arrays along depth axis
print(arr3)

"""Problem 6 : Create a filter array for the 1d array. If the number is even then store True in then filter array else False
And then filter the initial array using the filter array.
"""

import numpy as np

arr = np.array([41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
#code here
fltr_arr = []

for element in arr: # iterate
  if element % 2 == 0: # condition for even
    fltr_arr.append(True)
  else:
    fltr_arr.append(False)

arr2 = arr[fltr_arr]

print(arr2)

"""Problem 7 : Generate 50 random numbers and store it in numpy array and then apply the same operations in problem 6"""

from numpy import random

#code here
random_numbers = random.randint(1, 100, 50) #50 random numbers from 1-100
print(random_numbers)

fltr_arr2 = []

for element in random_numbers: # iterate random_numbers array
  if element % 2 == 0:
    fltr_arr2.append(True)
  else:
    fltr_arr2.append(False)

final_arr = random_numbers[fltr_arr2]
print(final_arr)

"""Problem 8 :  Slice from the index 3 from the end to index 1 from the end

"""

import numpy as np

arr1 = np.array([[1, 2], [3, 4],[5,6],[7,8],[9,10]])

#code here
arr2 = arr1[-3:-1]
print(arr2)

"""Problem 9 : Return every two other element from index 1 to index 5:"""

import numpy as np
arr = np.array([41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
arr2 = arr[1:6:2]
print(arr2)

"""Problem 10 : Generate a random permutation of elements of following array"""

import numpy as np
arr = np.array([41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
#code here
arr2 = np.random.permutation(arr) #permutation function for permutation
print(arr2)