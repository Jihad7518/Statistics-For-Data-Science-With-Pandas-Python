# -*- coding: utf-8 -*-
"""Lab1_tasks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TtcxbVdHQ0cg2SAOow0DbnkpoDC1kkHt

# Lab 1 Assignment: Basics of Python

Solve the questions in this jupyter notebook. You must:
- make your code tidy with appropriate comments.
- Use the code segment below the questions.
- Submit the code by 11:59 PM, Saturday

# 1. Read two inputs from the user. Write a Python program to print their product. If the product is greater than 1000, then print their sum as well.
"""

num1 = int(input("Enter 1st Number: "))
num2 = int(input("Enter 2nd Number: ")) # int is used for taking integer value input

product = num1 * num2 #product

if product > 1000: #condition
  print("Product: ", product)
  addition = num1 + num2 #sum
  print("Summation: ", addition)
else:
  print("Product: ", product)

"""# 2. Write a Python program to find the area and perimeter of a circle. Read inputs from the user."""

rad = float(input("Enter rdius: ")) # takes radius as input

area = 3.1416 * rad * rad # area calculation law
perimeter = 2 * 3.1416 * rad # perimeter calculation law

print("Area: ", area)
print("Perimete: ", perimeter)

"""# 3. Given a positive integer N (read from the user), write a Python program to calculate the value of the following series.
`1^2 + 2^2 + 3^2 + 4^2 + … + N^2`
"""

N = int(input("Enter an integer: ")) # takes positive integer
value = 0

for i in range(1, N+1, 1): # iterate from 0 to N
  value = value + (i*i) # sum of squares

print("Value of the square sum: ", value)

"""# 4. Given a positive integer N (read from the user), write a Python program to check if the number is prime or not."""

pos_integer = int(input("Enter a positive number please: "))
flag = False # assume a flag variable

if pos_integer == 1:
  print("Not Prime")
else:
  for i in range(2, pos_integer): # iterate from 2 to the last of the integer
    if(pos_integer % i) == 0: # find factor
      flag = True
      break # if 1 factor found no need to check more
  if flag:
    print("Not Prime")
  else:
    print("PRIME!!!")

"""# 5. Given a list of numbers (hardcoded in the program), write a Python program to calculate the sum of the list. Do not use any built-in function."""

list1 = [30, 40, 4, 76, 89]
result = 0

for i in range(len(list1)):
  result += list1[i] #add every element in the list

print("Summation: ", result)

"""# 6. Given a list of numbers (hardcoded in the program), write a Python program to calculate the sum of the even-indexed elements in the list."""

list1 = [30, 40, 4, 76, 89, 51, 10, 24]
result = 0

for i in range(0, len(list1), 2): #iterate by 2
  result += list1[i]

print("Even Indexed Sum: ", result)

"""# 7. Given a list of numbers (hardcoded in the program), write a Python program to find the second largest element of the list."""

list1 = [30, 40, 4, 76, 89, 51, 10, 24]

list1.sort() # sort the list asscending order

print("Second largest: ", list1[-2]) # list[-2] will give 2nd number from the last

"""# 8. Given a string, display only those characters which are present at an even index number. Read inputs from the user."""

strr = input("Enter a string: ")

even_strr = [] # assume an empty string

for i in range(0, len(strr), 1):
  if i % 2 == 0:
    even_strr.append(strr[i]) # append them to the new string
print("New String: ", even_strr)

"""# 9. Given a string and an integer number N, remove characters from a string starting from zero up to N and print the new string. N must be less than the length of the string. Read inputs from the user. Do not use any built-in function."""

strr1 = input("Please enter a string: ")
N = int(input("Now please enter an integer: "))

strr2 = ""
for i in range(N, len(strr1)): # iterate from given n, and add to new string
  strr2 = strr2 + strr1[i]
print("New String: ", strr2)

"""# 10. Given a string, find the count of the substring “CSE303” appeared in the given string. Do not use any built-in function.

The string is: "This is CSE303 course. The name of CSE303 is: Statistics for Data Science. It's a fundamental CSE course for future data scientists."
"""

strr =  "This is CSE303 course. The name of CSE303 is: Statistics for Data Science. It's a fundamental CSE course for future data scientists."
substring = "CSE303"

appeared = 0
for i in range(len(strr) - len(substring) + 1):
  if strr[i:i+len(substring)] == substring: # take i-th charcter to number of lentgh substring have and then check wethear it's matching or not with the substring
    appeared = appeared + 1

print("Appeared: ", appeared)

"""# 11. Given a two list of numbers (hardcoded in the program), create a new list such that new list should contain only odd numbers from the first list and even numbers from the second list. You can assume that the length of both list are the same."""

list1 = [60, 45, 4, 76, 89, 51, 10, 24]
list2 = [21, 12, 34, 45, 32, 99, 92, 2]

list3 = []

for i in range(len(list1)):
  if list1[i] % 2 != 0: # takes only odd and add them to the list3
    list3.append(list1[i])

for j in range(len(list2)): #takes only even and add them to the list3
  if list2[j] % 2 == 0:
    list3.append(list2[j])

print("List 3: ", list3)

"""

# 12. Given a string, write a python function that will check if it is palindrome or not. Define a function named palindrome_checker_(your-student-id) in your program."""

def palindrome_checker_2019_3_60_110(strr): # function
  strr2 = strr.replace(" ", "").lower() #remove spaces first and then convert to lower case

  if strr2 == strr2[::-1]: # reverse string matched or not
    print(strr, ": is a Palindrome string")
  else:
    print(strr, "is not a Palindrome string")

sample = input("Enter a string: ")
palindrome_checker_2019_3_60_110(sample) # call the function with passing a sample

"""# BONUS !

### Go to Kaggle.com
### Download Titanic Dataset
### Load the Titatnic Dataset in Python Using Pandas Library

"""

import pandas as pd
titanic = pd.read_csv("Titanic-Dataset.csv") #read the file
titanic.describe()