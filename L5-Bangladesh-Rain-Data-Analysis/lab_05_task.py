# -*- coding: utf-8 -*-
"""Lab 05 Task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BeCLZE1ktzEfPNxhJjUFlNLUt1_yimOz
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("adult.csv")
df

df["marital-status"].value_counts().plot.bar()

"""Maritual status bar chart

--- Married people are the most number here


"""

plt.pie(df["workclass"].value_counts().values)
plt.legend( df["workclass"].value_counts().index)

"""Job place pie chart

--- People are choosing private for workplace a more than any other sector and the difference is huge.


"""

df[ ["gender"] ].value_counts().plot.bar()

"""count of people as per gender,

---looks here male data is more than female


"""

new_dataframe  = df[ df["hours-per-week"] > 40 ]
new_dataframe["gender"].value_counts().plot.bar()

"""income hours per week greater than 40 by gender,

--- Huge discrimination spoted, Gender male are earning a lot than female.


"""

df[ ["education","capital-gain"] ].groupby(["education"]).sum().plot.bar()

"""Capital gain bar chart as per Education level,

---And looks bachelors degree holders capital gain is the most, and it seems if education level is low then capital gain also becomes low.


"""

gender_education_counts = df.groupby('gender')['education'].value_counts()
print(gender_education_counts)
ax = gender_education_counts.plot(kind='bar', stacked=True)

"""education level count as per gender,

--- Male - highest number of people are HS-grad


"""

df[ ["race"] ].value_counts().plot.bar()

"""looks like here sample of white people are too much compare to other race people"""

sns.countplot(data=df, x="gender", hue="income")

sns.countplot(data=df, x="gender", hue="race")

"""income as per gender, higher number spoted in male as male are more then female in this data set

race as per gender
"""

sns.countplot(data=df, x="race", hue="income")

"""income as per race, white people are earning much more, ( noteL: white people data are more here also)"""

sns.countplot(data=df, x="race", hue="workclass")

"""workclass as per race"""

plt.pie(df["native-country"].value_counts().values)
plt.legend( df["native-country"].value_counts().index)

"""count as per native country"""

df.corr()

sns.heatmap( df.corr() )

"""for this data set here in the heatmap maximum valuse are between 0.0 to 0.2"""